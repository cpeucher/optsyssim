function [sig,params] = elec_coder_rz(seq,nsamples_per_symbol,params)
% Electrical RZ coder
%
% -------------------------------------------------------------------------
% DESCRIPTION:
% -------------------------------------------------------------------------
% This function generates an electrical RZ signal with adjustable
% parameters from a binary sequence.
% Note that the electrical RZ signal generated by this function corresponds
% to a rectangular pulse eventually filtered by a Gaussian filter to 
% provide the required rise time. Other types of RZ signals can be 
% generated using the elec_modulator function.
%
% -------------------------------------------------------------------------
% FUNCTION CALL:
% -------------------------------------------------------------------------
% params_rz.duty_cycle = 0.5;
% params_rz.rise_time = 1/symbol_rate/8;
% params_rz.normalisation = 1;
% [sig,params_rz] = elec_coder_rz(bit_pattern,nsamples_per_symbol,params_rz); 
%
% -------------------------------------------------------------------------
% INPUTS:
% -------------------------------------------------------------------------
% seq                   binary sequence to be modulated [binary vector]
%
% nsamples_per_symbol   number of samples per bit of the generated signal
%                           [integer scalar]
%
% params                RZ signal parameters [structure]
% 
%                           params.duty_cycle            
%                              duty cycle of the generated RZ signal
%                               [real scalar]
%
%                                Use 0.5 for 50%
%
%                           params.rise_time             
%                               pulse rise time, in s [real scalar]
%
%                           params.normalisation        
%                               optional normalisation of the signal to the 
%                                   [0,1] range [0/1
%
% -------------------------------------------------------------------------
% OUTPUTS:
% -------------------------------------------------------------------------
% sig                   electrical RZ signal encoded by the sequence seq
%                           [real vector]
%
% params                RZ signal parameters upgraded with actual duty
%                           cycle [structure]
%
%                           params.duty_cycle_actual
%                               actual duty cycle
%
% -------------------------------------------------------------------------
% GLOBAL:
% -------------------------------------------------------------------------
% 
%
% -------------------------------------------------------------------------
% -------------------------------------------------------------------------

nsymbols = length(seq);
% Number of symbols in the input sequence

sig_nrz = elec_coder_nrz(seq,nsamples_per_symbol);
% Create NRZ signal

nsamples_per_pulse = round(params.duty_cycle*nsamples_per_symbol/2)*2;
% Has to be an even number

params.duty_cycle_actual = nsamples_per_pulse/nsamples_per_symbol;
% Actual duty cycle

clock = [ones(1,nsamples_per_pulse) zeros(1,nsamples_per_symbol - nsamples_per_pulse)];
clock = repmat(clock,1,nsymbols);
clock = circshift(clock,[0 -(nsamples_per_pulse - nsamples_per_symbol)/2]);
% Create periodic rectangular signal of period 1/symbol_rate and pulse
% duration nsamples_per_symbol*dt

sig = double(and(sig_nrz,clock));
% Generate RZ signal
% AND operation between the NRZ signal and the clock signal

sig = elec_rise_time(sig,params.rise_time);
% Add rise time to the signal

if params.normalisation
    sigmin = min(sig);
    sigmax = max(sig);
    sig = (sig - sigmin)/(sigmax - sigmin);
end
% Optional normalisation of the amplitude of the pulse

end