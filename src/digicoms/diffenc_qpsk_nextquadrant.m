function iquad = diffenc_qpsk_nextquadrant(iquad,word_dec)
% Determine quadrant index for QPSK differential encoding
%
% -------------------------------------------------------------------------
% DESCRIPTION:
% -------------------------------------------------------------------------
% This function determines the next quadrant in differentially-encoded QPSK
% constellation based on the knowledge of the previous quadrant and the 
% 2-bit word to encode.
% The quadrants are described by quadrant indices according to:
%  1  |  0
%  -------
%  2  |  3
% The differential encoding rule is as follows:
%  word_dec  |   word_bin     |    phase shift
% ---------------------------------------------
%      0     |     00         |      0
%      1     |     01         |      pi/2
%      2     |     10         |      3*pi/2
%      3     |     11         |      pi
% 
% If the standard constellation is defined as
% constellation = [1+j, -1+j, -1-j, 1-j]
% then differentially-encoded symbols can be generated by
% symbs = constellation(iquad + 1);
%
% -------------------------------------------------------------------------
% FUNCTION CALL:
% -------------------------------------------------------------------------
% 
%
% -------------------------------------------------------------------------
% INPUTS:
% -------------------------------------------------------------------------
% iquad             quadrant index of the previously encoded symbol
%                       [integer in {0,1,2,3}]
%
% word_dec          decimal value of the 2-bit word to encode [integer in 
%                       {0,1,2,3}]
%
% -------------------------------------------------------------------------
% OUTPUTS:
% -------------------------------------------------------------------------
% iquad             quadrant index of the next encoded symbol
%                       [integer in {0,1,2,3}]
%
% -------------------------------------------------------------------------
% GLOBAL:
% -------------------------------------------------------------------------
% 
%
% -------------------------------------------------------------------------
% -------------------------------------------------------------------------


switch word_dec
    % Switch depending on the next 2-bit word.
    case 0
        iquad = mod(iquad + 0,4);
        % If '00' we stay in the same quadrant.
    case 1
        iquad = mod(iquad + 1,4);
        % If '01', we rotate by pi/2.
    case 2
        iquad = mod(iquad + 3,4);
        % If '10', we rotate by 3*pi/2
    case 3
        iquad = mod(iquad + 2,4);
        % If '11', we rotate by pi.
        
end
% End of switch depending on the next 2-bit word.

end